#########################################################################################
# Write top level file
#########################################################################################
proc wr_hdl_top {f_out} {	
	upvar #0 cfg cnfg

	set template {}
	set entity {}
	append entity "`timescale 1ns / 1ps\n"
	append entity "\n"
	append entity "import lynxTypes::*;\n"
	append entity "\n"
	append entity "`include \"axi_macros.svh\"\n"
	append entity "`include \"lynx_macros.svh\"\n"
	append entity "//\n"
	append entity "// Top Level\n"
	append entity "//\n"
	append entity "module top (\n"
	if {$cnfg(en_fv) eq 1} {
		append entity "    output wire       qsfp$cnfg(qsfp)_resetn,\n"
		append entity "    output wire       qsfp$cnfg(qsfp)_lpmode,\n"
		append entity "    output wire       qsfp$cnfg(qsfp)_modseln,\n"
		append entity "    input  wire\[3:0]  gt$cnfg(qsfp)_rxp_in,\n"
		append entity "    input  wire\[3:0]  gt$cnfg(qsfp)_rxn_in,\n"
		append entity "    output  wire\[3:0]  gt$cnfg(qsfp)_txp_out,\n"
		append entity "    output  wire\[3:0]  gt$cnfg(qsfp)_txn_out,\n"
		append entity "    input  wire        gt$cnfg(qsfp)_refclk_p,\n"
		append entity "    input  wire        gt$cnfg(qsfp)_refclk_n,\n"
	}
	if {$cnfg(en_ddr) eq 1} {
		if {$cnfg(ddr_0) eq 1} {
			append entity "    output wire        c0_ddr4_act_n,\n"
			append entity "    output wire\[16:0]  c0_ddr4_adr,\n"
			append entity "    output wire\[1:0]   c0_ddr4_ba,\n"
			append entity "    output wire\[1:0]   c0_ddr4_bg,\n"
			append entity "    output wire\[0:0]   c0_ddr4_ck_c,\n"
			append entity "    output wire\[0:0]   c0_ddr4_ck_t,\n"
			append entity "    output wire\[0:0]   c0_ddr4_cke,\n"
			append entity "    output wire\[0:0]   c0_ddr4_cs_n,\n"
			append entity "    inout  wire\[71:0]  c0_ddr4_dq,\n"
			append entity "    inout  wire\[17:0]   c0_ddr4_dqs_c,\n"
			append entity "    inout  wire\[17:0]   c0_ddr4_dqs_t,\n"
			append entity "    output wire\[0:0]   c0_ddr4_odt,\n"
			append entity "    output wire         c0_ddr4_par,\n"
			append entity "    output wire        c0_ddr4_reset_n,\n"
			append entity "    input  wire        c0_sys_clk_p,\n"
			append entity "    input  wire        c0_sys_clk_n,\n"
		}
		if {$cnfg(ddr_1) eq 1} {
			append entity "    output wire        c1_ddr4_act_n,\n"
			append entity "    output wire\[16:0]  c1_ddr4_adr,\n"
			append entity "    output wire\[1:0]   c1_ddr4_ba,\n"
			append entity "    output wire\[1:0]   c1_ddr4_bg,\n"
			append entity "    output wire\[0:0]   c1_ddr4_ck_c,\n"
			append entity "    output wire\[0:0]   c1_ddr4_ck_t,\n"
			append entity "    output wire\[0:0]   c1_ddr4_cke,\n"
			append entity "    output wire\[0:0]   c1_ddr4_cs_n,\n"
			append entity "    inout  wire\[71:0]  c1_ddr4_dq,\n"
			append entity "    inout  wire\[17:0]   c1_ddr4_dqs_c,\n"
			append entity "    inout  wire\[17:0]   c1_ddr4_dqs_t,\n"
			append entity "    output wire\[0:0]   c1_ddr4_odt,\n"
			append entity "    output wire         c1_ddr4_par,\n"
			append entity "    output wire        c1_ddr4_reset_n,\n"
			append entity "    input  wire        c1_sys_clk_p,\n"
			append entity "    input  wire        c1_sys_clk_n,\n"
		}
		if {$cnfg(ddr_2) eq 1} {
			append entity "    output wire        c2_ddr4_act_n,\n"
			append entity "    output wire\[16:0]  c2_ddr4_adr,\n"
			append entity "    output wire\[1:0]   c2_ddr4_ba,\n"
			append entity "    output wire\[1:0]   c2_ddr4_bg,\n"
			append entity "    output wire\[0:0]   c2_ddr4_ck_c,\n"
			append entity "    output wire\[0:0]   c2_ddr4_ck_t,\n"
			append entity "    output wire\[0:0]   c2_ddr4_cke,\n"
			append entity "    output wire\[0:0]   c2_ddr4_cs_n,\n"
			append entity "    inout  wire\[71:0]  c2_ddr4_dq,\n"
			append entity "    inout  wire\[17:0]   c2_ddr4_dqs_c,\n"
			append entity "    inout  wire\[17:0]   c2_ddr4_dqs_t,\n"
			append entity "    output wire\[0:0]   c2_ddr4_odt,\n"
			append entity "    output wire         c2_ddr4_par,\n"
			append entity "    output wire        c2_ddr4_reset_n,\n"
			append entity "    input  wire        c2_sys_clk_p,\n"
			append entity "    input  wire        c2_sys_clk_n,\n"
		}
		if {$cnfg(ddr_3) eq 1} {
			append entity "    output wire        c3_ddr4_act_n,\n"
			append entity "    output wire\[16:0]  c3_ddr4_adr,\n"
			append entity "    output wire\[1:0]   c3_ddr4_ba,\n"
			append entity "    output wire\[1:0]   c3_ddr4_bg,\n"
			append entity "    output wire\[0:0]   c3_ddr4_ck_c,\n"
			append entity "    output wire\[0:0]   c3_ddr4_ck_t,\n"
			append entity "    output wire\[0:0]   c3_ddr4_cke,\n"
			append entity "    output wire\[0:0]   c3_ddr4_cs_n,\n"
			append entity "    inout  wire\[71:0]  c3_ddr4_dq,\n"
			append entity "    inout  wire\[17:0]   c3_ddr4_dqs_c,\n"
			append entity "    inout  wire\[17:0]   c3_ddr4_dqs_t,\n"
			append entity "    output wire\[0:0]   c3_ddr4_odt,\n"
			append entity "    output wire         c3_ddr4_par,\n"
			append entity "    output wire        c3_ddr4_reset_n,\n"
			append entity "    input  wire        c3_sys_clk_p,\n"
			append entity "    input  wire        c3_sys_clk_n,\n"
		}
	}
	append entity "    input  wire\[0:0]   pcie_clk_clk_n,\n"
	append entity "    input  wire\[0:0]   pcie_clk_clk_p,\n"
	append entity "    input  wire\[15:0]  pcie_x16_rxn,\n"
	append entity "    input  wire\[15:0]  pcie_x16_rxp,\n"
	append entity "    output wire\[15:0]  pcie_x16_txn,\n"
	append entity "    output wire\[15:0]  pcie_x16_txp,\n"
	append entity "    input  wire        perst_n_nb,\n"
	append entity "    input  wire        resetn_0_nb\n"
	append entity ");\n"
	append entity "\n"
	append entity "     \n"
	append entity "    // AXI resetn\n"
	append entity "    wire\[0:0] aresetn;\n"
	append entity "    // AXI clk (250 MHz)\n"
	append entity "    wire aclk;\n"
	append entity "\n"
    append entity "    // IRQ\n"
	append entity "    wire\[N_REGIONS-1:0] usr_irq;\n"
	append entity "\n"
	append entity "    wire resetn_0;\n"
	append entity "    wire perst_n;\n"
	append entity "\n"
	append entity "    // Static config\n"
	append entity "    AXI4L axi_cnfg ();\n"
	append entity "\n"
	append entity "    // Application control\n"
	append entity "    AXI4L axi_ctrl \[N_REGIONS] ();\n"
	append entity "\n"
	if {$cnfg(en_avx) eq 1} {
		append entity "    // Application control AVX\n"
		append entity "    AXI4 #(.AXI4_DATA_BITS(AVX_DATA_BITS)) axim_ctrl \[N_REGIONS] ();\n"
	}
	append entity "\n"
    append entity "    // Stream to application\n"
    append entity "    AXI4S axis_dyn_out\[N_CHAN] ();\n"
    append entity "\n"
    append entity "    // Stream from application\n"
    append entity "    AXI4S axis_dyn_in\[N_CHAN] ();\n"
    append entity "\n"
    append entity "    // Descriptor bypass\n"
    append entity "    xdmaIntf xdma_req \[N_CHAN] ();\n"
    append entity "\n"
	if {$cnfg(en_ddr) eq 1} {
		append entity "    // DDR AXI mm\n"
		append entity "    AXI4 axi_ddr_in\[2*N_DDR_CHAN] ();\n"
		append entity "\n"
	}
	if {$cnfg(en_fv) eq 1} {
		append entity "\n"
		append entity "    // RDMA\n"
		append entity "    metaIntf #(.DATA_BITS(32)) arp_lookup_request();\n"
		append entity "    metaIntf #(.DATA_BITS(56)) arp_lookup_reply();\n"
		append entity "    metaIntf #(.DATA_BITS(32)) set_ip_addr();\n"
		append entity "    metaIntf #(.DATA_BITS(4)) set_board_number();\n"
		append entity "    metaIntf #(.DATA_BITS(144)) qp_interface ();\n"
		append entity "    metaIntf #(.DATA_BITS(184)) conn_interface ();\n"
		append entity "\n" 
		append entity "    // FV requests\n"
		append entity "    metaIntf #(.DATA_BITS(FV_REQ_BITS)) rdma_req_host \[N_REGIONS] ();\n"
		if {$cnfg(en_fvv) eq 1} {
			append entity "    metaIntf #(.DATA_BITS(FV_REQ_BITS)) rdma_req_card \[N_REGIONS] ();\n"
			append entity "    metaIntf #(.DATA_BITS(FV_REQ_BITS)) rdma_req_fv \[N_REGIONS] ();\n"
		}
		append entity "\n"
		append entity "    // RDMA interface\n"
		append entity "    reqIntf rdma_rd_cmd \[N_REGIONS] ();\n"
		append entity "    reqIntf rdma_wr_cmd \[N_REGIONS] ();\n"
		append entity "    AXI4S axis_rdma_rd_data \[N_REGIONS] ();\n"
		append entity "    AXI4S axis_rdma_wr_data \[N_REGIONS] ();\n"
		append entity "\n"
		append entity "    logic [2:0] lowspeed_ctrl;\n"
		append entity "\n"
	}
	if {$cnfg(en_pr) eq 1} {
		append entity "    // PR clock\n"
		append entity "    wire pclk;\n"
		append entity "    wire presetn;\n"
		append entity "\n"
		append entity "    // PR streams\n"
		append entity "    AXI4S axis_pr();\n"
		append entity "\n"
		append entity "    wire\[31:0] axis_pr_data;\n"
		append entity "    wire axis_pr_ready;\n"
		append entity "    wire axis_pr_valid;\n"
		append entity "    \n"
		append entity "    // PR ICAP\n"
		append entity "    wire\[31:0] icap_out;\n"
		append entity "    wire icap_avail;\n"
		append entity "    wire icap_error;\n"
		append entity "    wire icap_done;\n"
		append entity "    wire icap_csn;\n"
		append entity "    wire\[31:0] icap_data;\n"
		append entity "\n"
	}
    append entity "    // IO buffers\n"
	append entity "    IBUF rst_IBUF_inst (\n"
	append entity "        .O(resetn_0), // Buffer output\n"
	append entity "        .I(resetn_0_nb) // Buffer input (connect directly to top-level port)\n"
	append entity "    );\n"
	append entity "\n"
	append entity "    IBUF perst_n_IBUF_inst (\n"
	append entity "    	   .O(perst_n),\n"
	append entity "    	   .I(perst_n_nb)\n"
	append entity "    );\n"
	append entity "\n"
	append entity "    // -----------------------------------------------------------------\n"
	append entity "    // STATIC LAYER \n"
	append entity "    // -----------------------------------------------------------------\n"
	append entity "    design_static design_static_i\n"
	append entity "       (.aclk(aclk),\n"
	append entity "        .aresetn(aresetn),\n"
	append entity "        .axi_cnfg_araddr(axi_cnfg.araddr),\n"
	append entity "        .axi_cnfg_arprot(axi_cnfg.arprot),\n"
	append entity "        .axi_cnfg_arready(axi_cnfg.arready),\n"
	append entity "        .axi_cnfg_arvalid(axi_cnfg.arvalid),\n"
	append entity "        .axi_cnfg_awaddr(axi_cnfg.awaddr),\n"
	append entity "        .axi_cnfg_awprot(axi_cnfg.awprot),\n"
	append entity "        .axi_cnfg_awready(axi_cnfg.awready),\n"
	append entity "        .axi_cnfg_awvalid(axi_cnfg.awvalid),\n"
	append entity "        .axi_cnfg_bready(axi_cnfg.bready),\n"
	append entity "        .axi_cnfg_bresp(axi_cnfg.bresp),\n"
	append entity "        .axi_cnfg_bvalid(axi_cnfg.bvalid),\n"
	append entity "        .axi_cnfg_rdata(axi_cnfg.rdata),\n"
	append entity "        .axi_cnfg_rready(axi_cnfg.rready),\n"
	append entity "        .axi_cnfg_rresp(axi_cnfg.rresp),\n"
	append entity "        .axi_cnfg_rvalid(axi_cnfg.rvalid),\n"
	append entity "        .axi_cnfg_wdata(axi_cnfg.wdata),\n"
	append entity "        .axi_cnfg_wready(axi_cnfg.wready),\n"
	append entity "        .axi_cnfg_wstrb(axi_cnfg.wstrb),\n"
	append entity "        .axi_cnfg_wvalid(axi_cnfg.wvalid),\n"
	for {set i 0}  {$i < $cnfg(n_reg)} {incr i} {
		append entity "        .axi_ctrl_$i\_araddr(axi_ctrl\[$i].araddr),\n"
		append entity "        .axi_ctrl_$i\_arprot(axi_ctrl\[$i].arprot),\n"
		append entity "        .axi_ctrl_$i\_arready(axi_ctrl\[$i].arready),\n"
		append entity "        .axi_ctrl_$i\_arvalid(axi_ctrl\[$i].arvalid),\n"
		append entity "        .axi_ctrl_$i\_awaddr(axi_ctrl\[$i].awaddr),\n"
		append entity "        .axi_ctrl_$i\_awprot(axi_ctrl\[$i].awprot),\n"
		append entity "        .axi_ctrl_$i\_awready(axi_ctrl\[$i].awready),\n"
		append entity "        .axi_ctrl_$i\_awvalid(axi_ctrl\[$i].awvalid),\n"
		append entity "        .axi_ctrl_$i\_bready(axi_ctrl\[$i].bready),\n"
		append entity "        .axi_ctrl_$i\_bresp(axi_ctrl\[$i].bresp),\n"
		append entity "        .axi_ctrl_$i\_bvalid(axi_ctrl\[$i].bvalid),\n"
		append entity "        .axi_ctrl_$i\_rdata(axi_ctrl\[$i].rdata),\n"
		append entity "        .axi_ctrl_$i\_rready(axi_ctrl\[$i].rready),\n"
		append entity "        .axi_ctrl_$i\_rresp(axi_ctrl\[$i].rresp),\n"
		append entity "        .axi_ctrl_$i\_rvalid(axi_ctrl\[$i].rvalid),\n"
		append entity "        .axi_ctrl_$i\_wdata(axi_ctrl\[$i].wdata),\n"
		append entity "        .axi_ctrl_$i\_wready(axi_ctrl\[$i].wready),\n"
		append entity "        .axi_ctrl_$i\_wstrb(axi_ctrl\[$i].wstrb),\n"
		append entity "        .axi_ctrl_$i\_wvalid(axi_ctrl\[$i].wvalid),\n"
	}
	if {$cnfg(en_avx) eq 1} {
		for {set i 0}  {$i < $cnfg(n_reg)} {incr i} {
			append entity "        .axim_ctrl_$i\_araddr(axim_ctrl\[$i].araddr),\n"
			append entity "        .axim_ctrl_$i\_arburst(axim_ctrl\[$i].arburst),\n"
			append entity "        .axim_ctrl_$i\_arcache(axim_ctrl\[$i].arcache),\n"
			append entity "        .axim_ctrl_$i\_arlen(axim_ctrl\[$i].arlen),\n"
			append entity "        .axim_ctrl_$i\_arlock(axim_ctrl\[$i].arlock),\n"
			append entity "        .axim_ctrl_$i\_arprot(axim_ctrl\[$i].arprot),\n"
			append entity "        .axim_ctrl_$i\_arqos(axim_ctrl\[$i].arqos),\n"
			append entity "        .axim_ctrl_$i\_arready(axim_ctrl\[$i].arready),\n"
			append entity "        .axim_ctrl_$i\_arregion(axim_ctrl\[$i].arregion),\n"
			append entity "        .axim_ctrl_$i\_arsize(axim_ctrl\[$i].arsize),\n"
			append entity "        .axim_ctrl_$i\_arvalid(axim_ctrl\[$i].arvalid),\n"
			append entity "        .axim_ctrl_$i\_awaddr(axim_ctrl\[$i].awaddr),\n"
			append entity "        .axim_ctrl_$i\_awburst(axim_ctrl\[$i].awburst),\n"
			append entity "        .axim_ctrl_$i\_awcache(axim_ctrl\[$i].awcache),\n"
			append entity "        .axim_ctrl_$i\_awlen(axim_ctrl\[$i].awlen),\n"
			append entity "        .axim_ctrl_$i\_awlock(axim_ctrl\[$i].awlock),\n"
			append entity "        .axim_ctrl_$i\_awprot(axim_ctrl\[$i].awprot),\n"
			append entity "        .axim_ctrl_$i\_awqos(axim_ctrl\[$i].awqos),\n"
			append entity "        .axim_ctrl_$i\_awready(axim_ctrl\[$i].awready),\n"
			append entity "        .axim_ctrl_$i\_awregion(axim_ctrl\[$i].awregion),\n"
			append entity "        .axim_ctrl_$i\_awsize(axim_ctrl\[$i].awsize),\n"
			append entity "        .axim_ctrl_$i\_awvalid(axim_ctrl\[$i].awvalid),\n"
			append entity "        .axim_ctrl_$i\_bready(axim_ctrl\[$i].bready),\n"
			append entity "        .axim_ctrl_$i\_bresp(axim_ctrl\[$i].bresp),\n"
			append entity "        .axim_ctrl_$i\_bvalid(axim_ctrl\[$i].bvalid),\n"
			append entity "        .axim_ctrl_$i\_rdata(axim_ctrl\[$i].rdata),\n"
			append entity "        .axim_ctrl_$i\_rlast(axim_ctrl\[$i].rlast),\n"
			append entity "        .axim_ctrl_$i\_rready(axim_ctrl\[$i].rready),\n"
			append entity "        .axim_ctrl_$i\_rresp(axim_ctrl\[$i].rresp),\n"
			append entity "        .axim_ctrl_$i\_rvalid(axim_ctrl\[$i].rvalid),\n"
			append entity "        .axim_ctrl_$i\_wdata(axim_ctrl\[$i].wdata),\n"
			append entity "        .axim_ctrl_$i\_wlast(axim_ctrl\[$i].wlast),\n"
			append entity "        .axim_ctrl_$i\_wready(axim_ctrl\[$i].wready),\n"
			append entity "        .axim_ctrl_$i\_wstrb(axim_ctrl\[$i].wstrb),\n"
			append entity "        .axim_ctrl_$i\_wvalid(axim_ctrl\[$i].wvalid),\n"
		}
	}
    for {set i 0}  {$i < $cnfg(n_chan)} {incr i} {
        append entity "        .axis_dyn_in_$i\_tdata(axis_dyn_in\[$i].tdata),\n"
        append entity "        .axis_dyn_in_$i\_tkeep(axis_dyn_in\[$i].tkeep),\n"
        append entity "        .axis_dyn_in_$i\_tlast(axis_dyn_in\[$i].tlast),\n"
        append entity "        .axis_dyn_in_$i\_tready(axis_dyn_in\[$i].tready),\n"
        append entity "        .axis_dyn_in_$i\_tvalid(axis_dyn_in\[$i].tvalid),\n"
        append entity "        .axis_dyn_out_$i\_tdata(axis_dyn_out\[$i].tdata),\n"
        append entity "        .axis_dyn_out_$i\_tkeep(axis_dyn_out\[$i].tkeep),\n"
        append entity "        .axis_dyn_out_$i\_tlast(axis_dyn_out\[$i].tlast),\n"
        append entity "        .axis_dyn_out_$i\_tready(axis_dyn_out\[$i].tready),\n"
        append entity "        .axis_dyn_out_$i\_tvalid(axis_dyn_out\[$i].tvalid),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_ctl(xdma_req\[$i].c2h_ctl),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_dst_addr(xdma_req\[$i].c2h_addr),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_len(xdma_req\[$i].c2h_len),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_load(xdma_req\[$i].c2h_valid),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_ready(xdma_req\[$i].c2h_ready),\n"
        append entity "        .dsc_bypass_c2h_$i\_dsc_byp_src_addr(0),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_ctl(xdma_req\[$i].h2c_ctl),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_dst_addr(0),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_len(xdma_req\[$i].h2c_len),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_load(xdma_req\[$i].h2c_valid),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_ready(xdma_req\[$i].h2c_ready),\n"
        append entity "        .dsc_bypass_h2c_$i\_dsc_byp_src_addr(xdma_req\[$i].h2c_addr),\n"
        append entity "        .dsc_status_c2h_sts$i\(xdma_req\[$i].c2h_status),\n"
        append entity "        .dsc_status_h2c_sts$i\(xdma_req\[$i].h2c_status),\n"
    }	
	if {$cnfg(en_ddr) eq 1} {
		if {$cnfg(ddr_0) eq 1} {
			append entity "        .c0_ddr4_act_n(c0_ddr4_act_n),\n"
			append entity "        .c0_ddr4_adr(c0_ddr4_adr),\n"
			append entity "        .c0_ddr4_ba(c0_ddr4_ba),\n"
			append entity "        .c0_ddr4_bg(c0_ddr4_bg),\n"
			append entity "        .c0_ddr4_ck_c(c0_ddr4_ck_c),\n"
			append entity "        .c0_ddr4_ck_t(c0_ddr4_ck_t),\n"
			append entity "        .c0_ddr4_cke(c0_ddr4_cke),\n"
			append entity "        .c0_ddr4_cs_n(c0_ddr4_cs_n),\n"
			append entity "        .c0_ddr4_dq(c0_ddr4_dq),\n"
			append entity "        .c0_ddr4_dqs_c(c0_ddr4_dqs_c),\n"
			append entity "        .c0_ddr4_dqs_t(c0_ddr4_dqs_t),\n"
			append entity "        .c0_ddr4_odt(c0_ddr4_odt),\n"
			append entity "        .c0_ddr4_par(c0_ddr4_par),\n"
			append entity "        .c0_ddr4_reset_n(c0_ddr4_reset_n),\n"
			append entity "        .c0_sys_clk_0_clk_n(c0_sys_clk_n),\n"
			append entity "        .c0_sys_clk_0_clk_p(c0_sys_clk_p),\n"
			append entity "        .axi_ctrl_ddr_0_araddr(0),\n"
			append entity "        .axi_ctrl_ddr_0_arready(),\n"
			append entity "        .axi_ctrl_ddr_0_arvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_0_awaddr(0),\n"
			append entity "        .axi_ctrl_ddr_0_awready(),\n"
			append entity "        .axi_ctrl_ddr_0_awvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_0_bready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_0_bresp(),\n"
			append entity "        .axi_ctrl_ddr_0_bvalid(),\n"
			append entity "        .axi_ctrl_ddr_0_rdata(),\n"
			append entity "        .axi_ctrl_ddr_0_rready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_0_rresp(),\n"
			append entity "        .axi_ctrl_ddr_0_rvalid(),\n"
			append entity "        .axi_ctrl_ddr_0_wdata(0),\n"
			append entity "        .axi_ctrl_ddr_0_wready(),\n"
			append entity "        .axi_ctrl_ddr_0_wvalid(1'b0),\n"
		}
		if {$cnfg(ddr_1) eq 1} {
			append entity "        .c1_ddr4_act_n(c1_ddr4_act_n),\n"
			append entity "        .c1_ddr4_adr(c1_ddr4_adr),\n"
			append entity "        .c1_ddr4_ba(c1_ddr4_ba),\n"
			append entity "        .c1_ddr4_bg(c1_ddr4_bg),\n"
			append entity "        .c1_ddr4_ck_c(c1_ddr4_ck_c),\n"
			append entity "        .c1_ddr4_ck_t(c1_ddr4_ck_t),\n"
			append entity "        .c1_ddr4_cke(c1_ddr4_cke),\n"
			append entity "        .c1_ddr4_cs_n(c1_ddr4_cs_n),\n"
			append entity "        .c1_ddr4_dq(c1_ddr4_dq),\n"
			append entity "        .c1_ddr4_dqs_c(c1_ddr4_dqs_c),\n"
			append entity "        .c1_ddr4_dqs_t(c1_ddr4_dqs_t),\n"
			append entity "        .c1_ddr4_odt(c1_ddr4_odt),\n"
			append entity "        .c1_ddr4_par(c1_ddr4_par),\n"
			append entity "        .c1_ddr4_reset_n(c1_ddr4_reset_n),\n"
			append entity "        .c1_sys_clk_0_clk_n(c1_sys_clk_n),\n"
			append entity "        .c1_sys_clk_0_clk_p(c1_sys_clk_p),\n"
			append entity "        .axi_ctrl_ddr_1_araddr(0),\n"
			append entity "        .axi_ctrl_ddr_1_arready(),\n"
			append entity "        .axi_ctrl_ddr_1_arvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_1_awaddr(0),\n"
			append entity "        .axi_ctrl_ddr_1_awready(),\n"
			append entity "        .axi_ctrl_ddr_1_awvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_1_bready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_1_bresp(),\n"
			append entity "        .axi_ctrl_ddr_1_bvalid(),\n"
			append entity "        .axi_ctrl_ddr_1_rdata(),\n"
			append entity "        .axi_ctrl_ddr_1_rready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_1_rresp(),\n"
			append entity "        .axi_ctrl_ddr_1_rvalid(),\n"
			append entity "        .axi_ctrl_ddr_1_wdata(0),\n"
			append entity "        .axi_ctrl_ddr_1_wready(),\n"
			append entity "        .axi_ctrl_ddr_1_wvalid(1'b0),\n"
		}	
		if {$cnfg(ddr_2) eq 1} {
			append entity "        .c2_ddr4_act_n(c2_ddr4_act_n),\n"
			append entity "        .c2_ddr4_adr(c2_ddr4_adr),\n"
			append entity "        .c2_ddr4_ba(c2_ddr4_ba),\n"
			append entity "        .c2_ddr4_bg(c2_ddr4_bg),\n"
			append entity "        .c2_ddr4_ck_c(c2_ddr4_ck_c),\n"
			append entity "        .c2_ddr4_ck_t(c2_ddr4_ck_t),\n"
			append entity "        .c2_ddr4_cke(c2_ddr4_cke),\n"
			append entity "        .c2_ddr4_cs_n(c2_ddr4_cs_n),\n"
			append entity "        .c2_ddr4_dq(c2_ddr4_dq),\n"
			append entity "        .c2_ddr4_dqs_c(c2_ddr4_dqs_c),\n"
			append entity "        .c2_ddr4_dqs_t(c2_ddr4_dqs_t),\n"
			append entity "        .c2_ddr4_odt(c2_ddr4_odt),\n"
			append entity "        .c2_ddr4_par(c2_ddr4_par),\n"
			append entity "        .c2_ddr4_reset_n(c2_ddr4_reset_n),\n"
			append entity "        .c2_sys_clk_0_clk_n(c2_sys_clk_n),\n"
			append entity "        .c2_sys_clk_0_clk_p(c2_sys_clk_p),\n"
			append entity "        .axi_ctrl_ddr_2_araddr(0),\n"
			append entity "        .axi_ctrl_ddr_2_arready(),\n"
			append entity "        .axi_ctrl_ddr_2_arvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_2_awaddr(0),\n"
			append entity "        .axi_ctrl_ddr_2_awready(),\n"
			append entity "        .axi_ctrl_ddr_2_awvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_2_bready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_2_bresp(),\n"
			append entity "        .axi_ctrl_ddr_2_bvalid(),\n"
			append entity "        .axi_ctrl_ddr_2_rdata(),\n"
			append entity "        .axi_ctrl_ddr_2_rready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_2_rresp(),\n"
			append entity "        .axi_ctrl_ddr_2_rvalid(),\n"
			append entity "        .axi_ctrl_ddr_2_wdata(0),\n"
			append entity "        .axi_ctrl_ddr_2_wready(),\n"
			append entity "        .axi_ctrl_ddr_2_wvalid(1'b0),\n"
		}
		if {$cnfg(ddr_3) eq 1} {
			append entity "        .c3_ddr4_act_n(c3_ddr4_act_n),\n"
			append entity "        .c3_ddr4_adr(c3_ddr4_adr),\n"
			append entity "        .c3_ddr4_ba(c3_ddr4_ba),\n"
			append entity "        .c3_ddr4_bg(c3_ddr4_bg),\n"
			append entity "        .c3_ddr4_ck_c(c3_ddr4_ck_c),\n"
			append entity "        .c3_ddr4_ck_t(c3_ddr4_ck_t),\n"
			append entity "        .c3_ddr4_cke(c3_ddr4_cke),\n"
			append entity "        .c3_ddr4_cs_n(c3_ddr4_cs_n),\n"
			append entity "        .c3_ddr4_dq(c3_ddr4_dq),\n"
			append entity "        .c3_ddr4_dqs_c(c3_ddr4_dqs_c),\n"
			append entity "        .c3_ddr4_dqs_t(c3_ddr4_dqs_t),\n"
			append entity "        .c3_ddr4_odt(c3_ddr4_odt),\n"
			append entity "        .c3_ddr4_par(c3_ddr4_par),\n"
			append entity "        .c3_ddr4_reset_n(c3_ddr4_reset_n),\n"
			append entity "        .c3_sys_clk_0_clk_n(c3_sys_clk_n),\n"
			append entity "        .c3_sys_clk_0_clk_p(c3_sys_clk_p),\n"
			append entity "        .axi_ctrl_ddr_3_araddr(0),\n"
			append entity "        .axi_ctrl_ddr_3_arready(),\n"
			append entity "        .axi_ctrl_ddr_3_arvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_3_awaddr(0),\n"
			append entity "        .axi_ctrl_ddr_3_awready(),\n"
			append entity "        .axi_ctrl_ddr_3_awvalid(1'b0),\n"
			append entity "        .axi_ctrl_ddr_3_bready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_3_bresp(),\n"
			append entity "        .axi_ctrl_ddr_3_bvalid(),\n"
			append entity "        .axi_ctrl_ddr_3_rdata(),\n"
			append entity "        .axi_ctrl_ddr_3_rready(1'b0),\n"
			append entity "        .axi_ctrl_ddr_3_rresp(),\n"
			append entity "        .axi_ctrl_ddr_3_rvalid(),\n"
			append entity "        .axi_ctrl_ddr_3_wdata(0),\n"
			append entity "        .axi_ctrl_ddr_3_wready(),\n"
			append entity "        .axi_ctrl_ddr_3_wvalid(1'b0),\n"
		}
		for {set i 0}  {$i < 2 * $cnfg(n_ddr_chan)} {incr i} {
			append entity "        .axi_ddr_in_$i\_araddr(axi_ddr_in\[$i].araddr),\n"
			append entity "        .axi_ddr_in_$i\_arburst(axi_ddr_in\[$i].arburst),\n"
			append entity "        .axi_ddr_in_$i\_arcache(axi_ddr_in\[$i].arcache),\n"
			append entity "        .axi_ddr_in_$i\_arid(axi_ddr_in\[$i].arid),\n"
			append entity "        .axi_ddr_in_$i\_arlen(axi_ddr_in\[$i].arlen),\n"
			append entity "        .axi_ddr_in_$i\_arlock(axi_ddr_in\[$i].arlock),\n"
			append entity "        .axi_ddr_in_$i\_arprot(axi_ddr_in\[$i].arprot),\n"
			append entity "        .axi_ddr_in_$i\_arqos(axi_ddr_in\[$i].arqos),\n"
			append entity "        .axi_ddr_in_$i\_arready(axi_ddr_in\[$i].arready),\n"
			append entity "        .axi_ddr_in_$i\_arregion(axi_ddr_in\[$i].arregion),\n"
			append entity "        .axi_ddr_in_$i\_arsize(axi_ddr_in\[$i].arsize),\n"
			append entity "        .axi_ddr_in_$i\_arvalid(axi_ddr_in\[$i].arvalid),\n"
			append entity "        .axi_ddr_in_$i\_awaddr(axi_ddr_in\[$i].awaddr),\n"
			append entity "        .axi_ddr_in_$i\_awburst(axi_ddr_in\[$i].awburst),\n"
			append entity "        .axi_ddr_in_$i\_awcache(axi_ddr_in\[$i].awcache),\n"
			append entity "        .axi_ddr_in_$i\_awid(axi_ddr_in\[$i].awid),\n"
			append entity "        .axi_ddr_in_$i\_awlen(axi_ddr_in\[$i].awlen),\n"
			append entity "        .axi_ddr_in_$i\_awlock(axi_ddr_in\[$i].awlock),\n"
			append entity "        .axi_ddr_in_$i\_awprot(axi_ddr_in\[$i].awprot),\n"
			append entity "        .axi_ddr_in_$i\_awqos(axi_ddr_in\[$i].awqos),\n"
			append entity "        .axi_ddr_in_$i\_awready(axi_ddr_in\[$i].awready),\n"
			append entity "        .axi_ddr_in_$i\_awregion(axi_ddr_in\[$i].awregion),\n"
			append entity "        .axi_ddr_in_$i\_awsize(axi_ddr_in\[$i].awsize),\n"
			append entity "        .axi_ddr_in_$i\_awvalid(axi_ddr_in\[$i].awvalid),\n"
			append entity "        .axi_ddr_in_$i\_bid(axi_ddr_in\[$i].bid),\n"
			append entity "        .axi_ddr_in_$i\_bready(axi_ddr_in\[$i].bready),\n"
			append entity "        .axi_ddr_in_$i\_bresp(axi_ddr_in\[$i].bresp),\n"
			append entity "        .axi_ddr_in_$i\_bvalid(axi_ddr_in\[$i].bvalid),\n"
			append entity "        .axi_ddr_in_$i\_rdata(axi_ddr_in\[$i].rdata),\n"
			append entity "        .axi_ddr_in_$i\_rid(axi_ddr_in\[$i].rid),\n"
			append entity "        .axi_ddr_in_$i\_rlast(axi_ddr_in\[$i].rlast),\n"
			append entity "        .axi_ddr_in_$i\_rready(axi_ddr_in\[$i].rready),\n"
			append entity "        .axi_ddr_in_$i\_rresp(axi_ddr_in\[$i].rresp),\n"
			append entity "        .axi_ddr_in_$i\_rvalid(axi_ddr_in\[$i].rvalid),\n"
			append entity "        .axi_ddr_in_$i\_wdata(axi_ddr_in\[$i].wdata),\n"
			append entity "        .axi_ddr_in_$i\_wlast(axi_ddr_in\[$i].wlast),\n"
			append entity "        .axi_ddr_in_$i\_wready(axi_ddr_in\[$i].wready),\n"
			append entity "        .axi_ddr_in_$i\_wstrb(axi_ddr_in\[$i].wstrb),\n"
			append entity "        .axi_ddr_in_$i\_wvalid(axi_ddr_in\[$i].wvalid),\n"
		}
	}
	append entity "        .pcie_clk_clk_n(pcie_clk_clk_n),\n"
	append entity "        .pcie_clk_clk_p(pcie_clk_clk_p),\n"
	append entity "        .pcie_x16_rxn(pcie_x16_rxn),\n"
	append entity "        .pcie_x16_rxp(pcie_x16_rxp),\n"
	append entity "        .pcie_x16_txn(pcie_x16_txn),\n"
	append entity "        .pcie_x16_txp(pcie_x16_txp),\n"
	if {$cnfg(en_pr) eq 1} {
		append entity "        .pclk(pclk),\n"
		append entity "        .presetn(presetn),\n"
	}
	append entity "        .perst_n(perst_n),\n"
	append entity "        .reset_0(~resetn_0),\n"
	append entity "        .usr_irq(usr_irq)\n"
	append entity "    );\n"
	append entity "    \n"
    append entity "    // -----------------------------------------------------------------\n"
	append entity "    // STATIC CONFIG \n"
	append entity "    // -----------------------------------------------------------------\n"
	append entity "    static_slave inst_static_slave (\n"
	append entity "        .aclk(aclk),\n"
	append entity "        .aresetn(aresetn),\n"
	if {$cnfg(en_pr) eq 1} {
        append entity "        .pr_xdma_req(xdma_req\[$cnfg(pr_chan)]),\n"
	}
	if {$cnfg(en_fv) eq 1} {
		append entity "        .arp_lookup_request(arp_lookup_request),\n"
		append entity "        .arp_lookup_reply(arp_lookup_reply),\n"
		append entity "        .set_ip_addr(set_ip_addr),\n"
		append entity "        .set_board_number(set_board_number),\n"
		append entity "        .qp_interface(qp_interface),\n"
		append entity "        .conn_interface(conn_interface),\n"
		append entity "        .lowspeed_ctrl(lowspeed_ctrl),\n"
	} else {
		append entity "        .lowspeed_ctrl(),\n"
	}
	append entity "        .axi_ctrl(axi_cnfg)\n"
	append entity "    );\n"
	append entity "\n"
    if {$cnfg(en_fv) eq 1} {
		append entity "    // -----------------------------------------------------------------\n"
		append entity "    // RDMA \n"
		append entity "    // -----------------------------------------------------------------\n"
		append entity "    assign qsfp$cnfg(qsfp)_resetn = lowspeed_ctrl[0];\n"
		append entity "    assign qsfp$cnfg(qsfp)_lpmode = lowspeed_ctrl[1];\n"
		append entity "    assign qsfp$cnfg(qsfp)_modseln = lowspeed_ctrl[2];\n"
		append entity "\n"
		append entity "    network_top inst_network_top (\n"
		append entity "        .aclk(aclk),\n"
		append entity "        .aresetn(aresetn),\n"
		append entity "        .sys_reset(~resetn_0),\n"
		append entity "        .dclk(aclk),\n"
		append entity "        .gt_refclk_p(gt$cnfg(qsfp)_refclk_p),\n"
		append entity "        .gt_refclk_n(gt$cnfg(qsfp)_refclk_n),\n"
		append entity "        .gt_rxp_in(gt$cnfg(qsfp)_rxp_in),\n"
		append entity "        .gt_rxn_in(gt$cnfg(qsfp)_rxn_in),\n"
		append entity "        .gt_txp_out(gt$cnfg(qsfp)_txp_out),\n"
		append entity "        .gt_txn_out(gt$cnfg(qsfp)_txn_out),\n"
		append entity "        .arp_lookup_request(arp_lookup_request),\n"
		append entity "        .arp_lookup_reply(arp_lookup_reply),\n"
		append entity "        .set_ip_addr(set_ip_addr),\n"
		append entity "        .set_board_number(set_board_number),\n"
		append entity "        .qp_interface(qp_interface),\n"
		append entity "        .conn_interface(conn_interface),\n"
		append entity "        .rdma_req_host(rdma_req_host),\n"
		if {$cnfg(en_fvv) eq 1} {
			append entity "        .rdma_req_card(rdma_req_card),\n"
			append entity "        .rdma_req_fv(rdma_req_fv),\n"
		}
		append entity "        .rdma_rd_cmd(rdma_rd_cmd),\n"
		append entity "        .rdma_wr_cmd(rdma_wr_cmd),\n"
		append entity "        .axis_rdma_rd_data(axis_rdma_rd_data),\n"
		append entity "        .axis_rdma_wr_data(axis_rdma_wr_data)\n"
		append entity "    );\n"	
		append entity "\n"
	}
	if {$cnfg(en_pr) eq 1} {
		append entity "    // -----------------------------------------------------------------\n"
		append entity "    // PR \n"
		append entity "    // -----------------------------------------------------------------\n"
		append entity "    pr_clock_converter inst_clk_cnvrt_pr (\n"
		append entity "    		.s_axis_aresetn(aresetn),\n"
		append entity " 		.m_axis_aresetn(presetn),\n"
		append entity " 		.s_axis_aclk(aclk),\n"
		append entity " 		.s_axis_tvalid(axis_dyn_out\[$cnfg(pr_chan)].tvalid),\n"
		append entity " 		.s_axis_tready(axis_dyn_out\[$cnfg(pr_chan)].tready),\n"
		append entity " 		.s_axis_tdata(axis_dyn_out\[$cnfg(pr_chan)].tdata),\n"
		append entity " 		.s_axis_tkeep(axis_dyn_out\[$cnfg(pr_chan)].tkeep),\n"
		append entity " 		.s_axis_tlast(axis_dyn_out\[$cnfg(pr_chan)].tlast),\n"
		append entity " 		.m_axis_aclk(pclk),\n"
		append entity " 		.m_axis_tvalid(axis_pr.tvalid),\n"
		append entity " 		.m_axis_tready(axis_pr.tready),\n"
		append entity " 		.m_axis_tdata(axis_pr.tdata),\n"
		append entity " 		.m_axis_tkeep(axis_pr.tkeep),\n"
		append entity " 		.m_axis_tlast(axis_pr.tlast)\n"
		append entity "    );\n"
		append entity "    \n"
		append entity "    pr_dwidth_converter inst_dwidth_cnvrt_pr (\n"
		append entity "    		.aclk(pclk),\n"
		append entity " 		.aresetn(presetn),\n"
		append entity " 		.s_axis_tvalid(axis_pr.tvalid),\n"
		append entity " 		.s_axis_tready(axis_pr.tready),\n"
		append entity " 		.s_axis_tdata(axis_pr.tdata),\n"
		append entity " 		.s_axis_tkeep(axis_pr.tkeep),\n"
		append entity " 		.s_axis_tlast(axis_pr.tlast),\n"
		append entity " 		.m_axis_tvalid(axis_pr_valid),\n"
		append entity " 		.m_axis_tready(axis_pr_ready),\n"
		append entity " 		.m_axis_tdata(axis_pr_data),\n"
		append entity " 		.m_axis_tkeep(),\n"
		append entity " 		.m_axis_tlast()\n"
		append entity "    );\n"
		append entity "    \n"
		append entity "    // Partial reconfiguration\n"
		append entity "    assign icap_csn = ~axis_pr_valid;\n"
		append entity "    assign axis_pr_ready = 1'b1;\n"
		append entity "    assign icap_data = {axis_pr_data\[24], axis_pr_data\[25], axis_pr_data\[26], axis_pr_data\[27], axis_pr_data\[28], axis_pr_data\[29], axis_pr_data\[30], axis_pr_data\[31],\n"
		append entity "                        axis_pr_data\[16], axis_pr_data\[17], axis_pr_data\[18], axis_pr_data\[19], axis_pr_data\[20], axis_pr_data\[21], axis_pr_data\[22], axis_pr_data\[23],\n"
		append entity "                        axis_pr_data\[8], axis_pr_data\[9], axis_pr_data\[10], axis_pr_data\[11], axis_pr_data\[12], axis_pr_data\[13], axis_pr_data\[14], axis_pr_data\[15],\n"
		append entity "                        axis_pr_data\[0], axis_pr_data\[1], axis_pr_data\[2], axis_pr_data\[3], axis_pr_data\[4], axis_pr_data\[5], axis_pr_data\[6], axis_pr_data\[7]};\n"
		append entity "    \n"
		append entity "    ICAPE3 #(\n"
		append entity "    .ICAP_AUTO_SWITCH(\"DISABLE\"),\n"
		append entity "    .SIM_CFG_FILE_NAME(\"NONE\")\n"
		append entity "    )\n"
		append entity "    ICAPE3_inst (\n"
		append entity "        .AVAIL(icap_avail), // 1-bit output: Availability status of ICAP\n"
		append entity "        .O(icap_out), // 32-bit output: Configuration data output bus\n"
		append entity "        .PRDONE(icap_done), // 1-bit output: Indicates completion of Partial Reconfiguration\n"
		append entity "        .PRERROR(icap_error), // 1-bit output: Indicates Error during Partial Reconfiguration\n"
		append entity "        .CLK(pclk), // 1-bit input: Clock input\n"
		append entity "        .CSIB(icap_csn), // 1-bit input: Active-Low ICAP enable\n"
		append entity "        .I(icap_data), // 32-bit input: Configuration data input bus\n"
		append entity "        .RDWRB(1'b0) // 1-bit input: Read/Write Select input\n"
		append entity "    );\n"
		append entity "    \n"
	}
	append entity "    // -----------------------------------------------------------------\n"
	append entity "    // DYNAMIC LAYER \n"
	append entity "    // -----------------------------------------------------------------\n"
    append entity "    design_dynamic_wrapper inst_dynamic (\n"
    append entity "        .sys_rst(~resetn_0),\n"
    append entity "        .aresetn(aresetn),\n"
    append entity "        .aclk(aclk),\n"
    append entity "        .axi_ctrl(axi_ctrl\[0+:$cnfg(n_reg)]),\n"
    if {$cnfg(en_avx) eq 1} {
        append entity "        .axim_ctrl(axim_ctrl\[0+:$cnfg(n_reg)]),\n"
    }
    if {$cnfg(en_ddr) eq 1} {
        append entity "        .axi_ddr_in(axi_ddr_in\[0+:$cnfg(n_ddr_chan)*2]),\n"
    }
    if {$cnfg(en_strm) eq 1} {
        append entity "        .axis_host_in(axis_dyn_in\[$cnfg(strm_chan)]),\n"
        append entity "        .axis_host_out(axis_dyn_out\[$cnfg(strm_chan)]),\n"
        append entity "        .host_xdma_req(xdma_req\[$cnfg(strm_chan)]),\n"
    }
    if {$cnfg(en_ddr) eq 1} {
        append entity "        .axis_card_in(axis_dyn_in\[$cnfg(ddr_chan)]),\n"
        append entity "        .axis_card_out(axis_dyn_out\[$cnfg(ddr_chan)]),\n"
        append entity "        .card_xdma_req(xdma_req\[$cnfg(ddr_chan)]),\n"
    }
    if {$cnfg(en_fv) eq 1} {
        append entity "        .rdma_req_host(rdma_req_host\[0+:$cnfg(n_reg)]),\n"
        if {$cnfg(en_fvv) eq 1} {
            append entity "        .rdma_req_card(rdma_req_card\[0+:$cnfg(n_reg)]),\n"
            append entity "        .rdma_req_fv(rdma_req_fv\[0+:$cnfg(n_reg)]),\n"
        }
        append entity "        .rdma_rd_cmd(rdma_rd_cmd\[0+:$cnfg(n_reg)]),\n"
        append entity "        .rdma_wr_cmd(rdma_wr_cmd\[0+:$cnfg(n_reg)]),\n"
        append entity "        .axis_rdma_rd_data(axis_rdma_rd_data\[0+:$cnfg(n_reg)]),\n"
        append entity "        .axis_rdma_wr_data(axis_rdma_wr_data\[0+:$cnfg(n_reg)]),\n"
    }
    append entity "        .usr_irq(usr_irq\[0+:$cnfg(n_reg)]),\n"
    append entity "        .S_BSCAN_drck(),\n"
    append entity "        .S_BSCAN_shift(),\n"
    append entity "        .S_BSCAN_tdi(),\n"
    append entity "        .S_BSCAN_update(),\n"
    append entity "        .S_BSCAN_sel(),\n"
    append entity "        .S_BSCAN_tdo(),\n"
    append entity "        .S_BSCAN_tms(),\n"
    append entity "        .S_BSCAN_tck(),\n"
    append entity "        .S_BSCAN_runtest(),\n"
    append entity "        .S_BSCAN_reset(),\n"
    append entity "        .S_BSCAN_capture(),\n"
    append entity "        .S_BSCAN_bscanid_en()    \n"
    append entity "    );\n"
    append entity "    \n"
	append entity "endmodule\n"
	append entity "\n"
	lappend template $entity
	set vho_file [open $f_out w]
	foreach line $template {
	    puts $vho_file $line
	}
	close $vho_file
}